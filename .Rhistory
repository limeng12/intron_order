t_adj_mat3[j,i]<-p_minus_rev;
}
}
}
path1<-del_find_path_iter(t_adj_mat2,t_alpha_v);
path2<-find_best_order_full2(t_adj_mat2,colnames(t_adj_mat2),t_alpha_v);
print(path1$best_order);
path1$best_order
path2$best_order
debugSource('~/Documents/projects/iso/code/mlp3.R', echo=TRUE)
path1<-del_find_path_iter(t_adj_mat2,t_alpha_v);
max_index
length(max_index)
star_grow
best_start
star_grow
debugSource('~/Documents/projects/iso/code/mlp3.R', echo=TRUE)
path1<-del_find_path_iter(t_adj_mat2,t_alpha_v);
debugSource('~/Documents/projects/iso/code/mlp3.R', echo=TRUE)
1601*412368/510/162527
log(1601*412368/510/162527)
sqrt(1/1601+1/162527+1/510+1/412368)
help(pnrom)
help(rnrom)
help(pnorm)
qnorm(1)
qnorm(2)
qnorm(0.5)
qnorm(0.6)
qnorm(0.975)
qnorm(0.975,2.075,0.051)
qnorm(0.025,2.075,0.051)
1601/162527
510/412368
1601+162527
510+412368
0.00985*(1-0.00985)/164128+0.00124*(1-0.00124)/412878
sqrt(0.00985*(1-0.00985)/164128+0.00124*(1-0.00124)/412878)
0.00985-0.00124
(6002-6017)^2/6017+(2001+2005.75)^2/2005.75
(6002-6017)^2/6017+(2001-2005.75)^2/2005.75
(6022-6017)^2/6017+(2001-2005.75)^2/2005.75
285+53
285+299
53+39
299+39
584/(584+92)
338+338
help(glm)
help(lm.fit)
install.packages("glm2")
library(glm2)
help(glm2)
install.packages("ordinal")
data<-list(a=list(
O=c(1,2,3,4),
L=c(3,4,5,6),
D=c(4,4,4,4)
),
b=list(
O=c(1,2,3),
L=c(3,4,6),
D=c(2,2,2)
))
data
data<-list(a=list(
O=c(1,2,3,4),
L=c(3,4,5,6),
D=c(4,4,4,4),
T=c(4,4,4,4)
),
b=list(
O=c(1,2,3),
L=c(3,4,6),
D=c(2,2,2),
T=c(3,3,3)
))
g<-c(1,2)
data2<-data
O<-c();
L<-c();
D<-c();
T<-c();
for(i in 1:length(data2)){
data2[[i]]$L<-data2[[i]]$L*g[i];
data2[[i]]$D<-data2[[i]]$L*g[i];
O<-c(O,data2[[i]]$O);
L<-c(O,data2[[i]]$L);
D<-c(O,data2[[i]]$D);
T<-c(O,data2[[i]]$T);
}
data3<-data.frame(O=O,L=L,D=D,T=T);
O
L
D
T
data3<-data.frame(O=O,L=L,D=D,T=T);
O
L
g<-c(1,2);
data2<-data
O<-c();
L<-c();
D<-c();
T<-c();
for(i in 1:length(data2)){
data2[[i]]$L<-data2[[i]]$L*g[i];
data2[[i]]$D<-data2[[i]]$L*g[i];
O<-c(O,data2[[i]]$O);
L<-c(L,data2[[i]]$L);
D<-c(D,data2[[i]]$D);
T<-c(T,data2[[i]]$T);
}
data3<-data.frame(O=O,L=L,D=D,T=T);
dd<-glm(O/T~., family=binomial(link = "logit"), data3);
T
O
dd
summary(dd)
O/T
L
g<-c(1,10);
data2<-data
O<-c();
L<-c();
D<-c();
T<-c();
for(i in 1:length(data2)){
data2[[i]]$L<-data2[[i]]$L*g[i];
data2[[i]]$D<-data2[[i]]$L*g[i];
O<-c(O,data2[[i]]$O);
L<-c(L,data2[[i]]$L);
D<-c(D,data2[[i]]$D);
T<-c(T,data2[[i]]$T);
}
data3<-data.frame(O=O,L=L,D=D,T=T);
dd<-glm(O/T~., family=binomial(link = "logit"), data3);
dd
summary(dd)
O
O/T
L
g<-c(1,1);
data2<-data
O<-c();
L<-c();
D<-c();
T<-c();
for(i in 1:length(data2)){
data2[[i]]$L<-data2[[i]]$L*g[i];
data2[[i]]$D<-data2[[i]]$L*g[i];
O<-c(O,data2[[i]]$O);
L<-c(L,data2[[i]]$L);
D<-c(D,data2[[i]]$D);
T<-c(T,data2[[i]]$T);
}
data3<-data.frame(O=O,L=L,D=D,T=T);
dd<-glm(O/T~., family=binomial(link = "logit"), data3);
summary(dd)
D
glm(O/T~., family=binomial(link = "logit"), data3);
O/T
L
getAbsolutePath()
library(R.utils)
getAbsolutePath()
help(  getAbsolutePath)
library(rsconnect)
install.packages("rsconnect")
library(rsconnect)
help(deployApp)
help(rnorm)
rnorm(1:5,1,1)
rnorm(1:20,1,1)
1000*12000/300
help(plot)
help(plot)
tt<-10
tt<-15
t<-tt
adj_mat <- matrix(nrow = t,ncol = t);
colnames(adj_mat)<-1:t
rownames(adj_mat)<-1:t
for( i in 1:nrow(adj_mat)){
for( j in 1:ncol(adj_mat)){
if(i!=j){
#p<-runif(1)
adj_mat[i,j]<-rpois(1,20);
adj_mat[j,i]<-rpois(1,15);
}
if(i==j){
adj_mat[i,j]<-0;
}
}
}
t_adj_mat2<-adj_mat[1:t,1:t];
path1<-find_opti_dynam(t_adj_mat2,t_alpha_v);
#library(tictoc);
get_log_sum<-function(t_sink, t_parents, t_mat_li){
##parents spliced first
a<-sum(log(t_mat_li[as.numeric(t_parents),t_sink]) );
a;
}
find_opti_dynam<-function(t_adj_mat2,t_alpha_v=0.1){
n<-nrow(t_adj_mat2);
t_adj_mat_li<-t_adj_mat2;
colnames(t_adj_mat_li)<-colnames(t_adj_mat2);
rownames(t_adj_mat_li)<-rownames(t_adj_mat2);
for(i in 1:nrow(t_adj_mat_li)){
for(j in 1:ncol(t_adj_mat_li)){
if(i==j){
t_adj_mat_li[i,j]<-t_adj_mat_li[j,i]<-0;
}
if(t_adj_mat_li[i,j]+t_adj_mat_li[j,i]==0){
next;
}
if(i>j){
p<- (t_adj_mat_li[i,j]+t_alpha_v)/(t_adj_mat_li[i,j]+t_adj_mat_li[j,i]+2*t_alpha_v);
t_adj_mat_li[i,j]<-p
t_adj_mat_li[j,i]<-1-p
}
}
}
v_set<-(1:n);
exc_set_power<-set_power(v_set);
scores<-list();
sinks<-list()
for(i in exc_set_power){
w_set<-paste0(i,collapse = ":");
#print(w_set );
scores[[w_set]]<-0;
sinks[[w_set]]<- -1;
if(length(i)>2){
for(j in i){
upvars<-cset_difference(i,j);
skore<-scores[[paste0(upvars,collapse = ":")]];
skore<-skore+get_log_sum(j,upvars,t_adj_mat_li);
#print(j);
if(sinks[[w_set]]== -1 || skore > scores[[w_set]]){
scores[[w_set]]<-skore;
sinks[[w_set]]<-j;
}
}
}else if(length(i)>1){
index_two<-as.numeric(i);
if(t_adj_mat_li[index_two[1],index_two[2]]>t_adj_mat_li[index_two[2],index_two[1]]){
scores[[w_set]]<-log(t_adj_mat_li[index_two[1],index_two[2]]);
sinks[[w_set]]<-index_two[2];
}else{
scores[[w_set]]<-log(t_adj_mat_li[index_two[2],index_two[1]]);
sinks[[w_set]]<-index_two[1];
}
}else{
scores[[w_set]]<-0;
sinks[[w_set]]<-(i)
}
#print(i)
}
ord<-c();
left<-1:n
best_socre<-scores[[paste0(left,collapse = ":") ]];
for(i in n:1){
ord[i]<-as.numeric( sinks[[paste0(left,collapse = ":")]] );
left<- setdiff(left,ord[i]);
}
#ord
list(best_order=as.character(ord),best_score=best_socre,number_of_maximum_order=NA)
}
#library(tictoc);
get_log_sum<-function(t_sink, t_parents, t_mat_li){
##parents spliced first
a<-sum(log(t_mat_li[as.numeric(t_parents),t_sink]) );
a;
}
find_opti_dynam<-function(t_adj_mat2,t_alpha_v=0.1){
n<-nrow(t_adj_mat2);
t_adj_mat_li<-t_adj_mat2;
colnames(t_adj_mat_li)<-colnames(t_adj_mat2);
rownames(t_adj_mat_li)<-rownames(t_adj_mat2);
for(i in 1:nrow(t_adj_mat_li)){
for(j in 1:ncol(t_adj_mat_li)){
if(i==j){
t_adj_mat_li[i,j]<-t_adj_mat_li[j,i]<-0;
}
if(t_adj_mat_li[i,j]+t_adj_mat_li[j,i]==0){
next;
}
if(i>j){
p<- (t_adj_mat_li[i,j]+t_alpha_v)/(t_adj_mat_li[i,j]+t_adj_mat_li[j,i]+2*t_alpha_v);
t_adj_mat_li[i,j]<-p
t_adj_mat_li[j,i]<-1-p
}
}
}
v_set<-(1:n);
exc_set_power<-set_power(v_set);
scores<-list();
sinks<-list()
for(i in exc_set_power){
w_set<-paste0(i,collapse = ":");
#print(w_set );
scores[[w_set]]<-0;
sinks[[w_set]]<- -1;
if(length(i)>2){
for(j in i){
upvars<-cset_difference(i,j);
skore<-scores[[paste0(upvars,collapse = ":")]];
skore<-skore+get_log_sum(j,upvars,t_adj_mat_li);
#print(j);
if(sinks[[w_set]]== -1 || skore > scores[[w_set]]){
scores[[w_set]]<-skore;
sinks[[w_set]]<-j;
}
}
}else if(length(i)>1){
index_two<-as.numeric(i);
if(t_adj_mat_li[index_two[1],index_two[2]]>t_adj_mat_li[index_two[2],index_two[1]]){
scores[[w_set]]<-log(t_adj_mat_li[index_two[1],index_two[2]]);
sinks[[w_set]]<-index_two[2];
}else{
scores[[w_set]]<-log(t_adj_mat_li[index_two[2],index_two[1]]);
sinks[[w_set]]<-index_two[1];
}
}else{
scores[[w_set]]<-0;
sinks[[w_set]]<-(i)
}
#print(i)
}
ord<-c();
left<-1:n
best_socre<-scores[[paste0(left,collapse = ":") ]];
for(i in n:1){
ord[i]<-as.numeric( sinks[[paste0(left,collapse = ":")]] );
left<- setdiff(left,ord[i]);
}
#ord
list(best_order=as.character(ord),best_score=best_socre,number_of_maximum_order=NA)
}
t<-tt
adj_mat <- matrix(nrow = t,ncol = t);
colnames(adj_mat)<-1:t
rownames(adj_mat)<-1:t
for( i in 1:nrow(adj_mat)){
for( j in 1:ncol(adj_mat)){
if(i!=j){
#p<-runif(1)
adj_mat[i,j]<-rpois(1,20);
adj_mat[j,i]<-rpois(1,15);
}
if(i==j){
adj_mat[i,j]<-0;
}
}
}
t_adj_mat2<-adj_mat[1:t,1:t];
path1<-find_opti_dynam(t_adj_mat2,t_alpha_v);
# tt<-15
t_alpha_v<-0.1
path1<-find_opti_dynam(t_adj_mat2,t_alpha_v);
#library(tictoc);
library(sets)
t_adj_mat2<-adj_mat[1:t,1:t];
path1<-find_opti_dynam(t_adj_mat2,t_alpha_v);
tt<-12
# tt<-12
t_alpha_v<-0.1
t<-tt
adj_mat <- matrix(nrow = t,ncol = t);
colnames(adj_mat)<-1:t
rownames(adj_mat)<-1:t
for( i in 1:nrow(adj_mat)){
for( j in 1:ncol(adj_mat)){
if(i!=j){
#p<-runif(1)
adj_mat[i,j]<-rpois(1,20);
adj_mat[j,i]<-rpois(1,15);
}
if(i==j){
adj_mat[i,j]<-0;
}
}
}
t_adj_mat2<-adj_mat[1:t,1:t];
path1<-find_opti_dynam(t_adj_mat2,t_alpha_v);
print("finished dyna");
tt<-13
# tt<-13
t_alpha_v<-0.1
t<-tt
adj_mat <- matrix(nrow = t,ncol = t);
colnames(adj_mat)<-1:t
rownames(adj_mat)<-1:t
for( i in 1:nrow(adj_mat)){
for( j in 1:ncol(adj_mat)){
if(i!=j){
#p<-runif(1)
adj_mat[i,j]<-rpois(1,20);
adj_mat[j,i]<-rpois(1,15);
}
if(i==j){
adj_mat[i,j]<-0;
}
}
}
t_adj_mat2<-adj_mat[1:t,1:t];
path1<-find_opti_dynam(t_adj_mat2,t_alpha_v);
print("finished dyna");
Rcpp::sourceCpp('Documents/projects/iso/code/mlp9.cpp')
library(igraph)
a<-matrix(0,1,1,1,0,0,1,1,0,0,0,1,0,0,0,0,nrow=4,byrow = TRUE)
a<-matrix( c(0,1,1,1,0,0,1,1,0,0,0,1,0,0,0,0),nrow=4,byrow = TRUE);
a
library(igraph)
a<-matrix( c(0,1,1,1,0,0,1,1,0,0,0,1,0,0,0,0),nrow=4,byrow = TRUE);
colnames(a)<-1:4
rownames(a)<-1:4
g2<-graph_from_adjacency_matrix(a, mode = c("directed") )
print(g2)
plot(g2)
a
plot(g2,layout=layout.circle)
plot(g2,layout=layout_with_fr)
plot(g2,layout=l)
plot(g2,layout=l)
plot(g2,layout=layout_on_grid)
plot(g2,layout=layout.sugiyama)
plot(g2,layout=layout_with_sugiyama)
plot(g2,layout=layout_with_sugiyama)
plot(g2,layout=layout_sugiyama)
l <- layout_with_sugiyama(g2)
plot(g2, layout=l)
l <- layout_with_sugiyama(g2)
plot(g2, layout=l)
l <- layout_with_sugiyama(g2,layers = rep(1,4))
plot(g2, layout=l)
layex <- layout_with_sugiyama(g2,layers = rep(1,4))
plot(g2, layout=layex)
plot(layex$extd_graph)
a
layex <- layout_with_sugiyama(g2)
#plot(g2, layout=layex)
plot(layex$extd_graph)
g2<-graph_from_adjacency_matrix(a, mode = c("directed") )
layex <- layout_with_sugiyama(g2)
#plot(g2, layout=layex)
plot(layex$extd_graph)
a
g2<-graph_from_adjacency_matrix(a, mode = c("directed") )
layex <- layout_with_sugiyama(g2)
g2<-graph_from_adjacency_matrix(a, mode = c("directed") )
plot(g2, layout=layex$layout)
library('igraph')
nodes <- c('a','b','c','d')
x <- c(0,1,2,3)
y <- c(0,1,2,3)
from <- c('a','b','c')
to <- c('b','c','d')
NodeList <- data.frame(nodes, x ,y)
EdgeList <- data.frame(from, to)
a<- graph_from_data_frame(vertices = NodeList, d= EdgeList, directed = FALSE)
plot(a)
library('igraph')
nodes <- c('a','b','c','d')
x <- c(0,1,2,3)
y <- c(0,1,2,3)
from <- c('a','b','c','a')
to <- c('b','c','d','d')
NodeList <- data.frame(nodes, x ,y)
EdgeList <- data.frame(from, to)
a<- graph_from_data_frame(vertices = NodeList, d= EdgeList, directed = FALSE)
plot(a)
a<- graph_from_data_frame(vertices = NodeList, d= EdgeList, directed = TRUE)
plot(a)
library('igraph')
nodes <- c('a','b','c','d')
x <- c(0,1,2,3)
y <- c(0,1,2,3)
from <- c('a','b','c','a')
to <- c('b','c','d','d')
NodeList <- data.frame(nodes, x ,y)
EdgeList <- data.frame(from, to)
a<- graph_from_data_frame(vertices = NodeList, d= EdgeList, directed = TRUE)
plot(a)
curve_multiple(a,start=0.8)
plot(a)
EdgeList <- data.frame(from, to)
a<- graph_from_data_frame(vertices = NodeList, d= EdgeList, directed = TRUE)
curve_multiple(a,start=0.8)
plot(a)
from <- c('a','b','c','a','a')
to <- c('b','c','d','d','c')
NodeList <- data.frame(nodes, x ,y)
EdgeList <- data.frame(from, to)
a<- graph_from_data_frame(vertices = NodeList, d= EdgeList, directed = TRUE)
curve_multiple(a,start=0.8)
plot(a)
58/(58+9)
2/(2+7)
help(sliderInput)
library(shiny)
help(sliderInput)
2.1/2.2
1.1/1.2
4.1/4.2
(58.1)/(58+9+0.2)
2.1/9.2
2^10
library(rstudioapi)
this.dir<-dirname(rstudioapi::getActiveDocumentContext()$path)
this.dir
source('~/Documents/projects/iso/intron_order/code/run_all.R', echo=TRUE)
